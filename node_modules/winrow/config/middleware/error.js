/*!
 * winrow
 * Copyright(c) 2020 create node js with microservices
 * MIT Licensed
 */

'use strict';

const Promise = require('bluebird');
const lodash = require('lodash');
const loggingFactory = require('winrow-logger');
const requestId = require('../supports/requestId');
const returnCodes = require('../supports/returnCodes');
const errorCodes = require('../supports/errorCodes');
const transformText = require('../supports/transformText');
const { get, isArray } = lodash;

function error(error, res) {
  loggingFactory.error(`Middleware has error : ${JSON.stringify(error, null, 1)}`, {
    requestId: `${requestId}`
  })
  const { name, message, statusCode } = error;
  if (error.hasOwnProperty(statusCode)) {
    return res.status(statusCode).send({
      name: name,
      message: message
    });
  }
  if (error instanceof Error) {
    const errorMessage = returnCodes(errorCodes, error.message);
    const statusCode = get(errorMessage, 'statusCode');
    return res.status(statusCode).send(errorMessage);
  }
  if (isArray(error)) {
    error = error.map(err => {
      const _err = {};
      const lastElement = err.split(' ').slice(-1).pop();
      _err.name = err.split(' ')[0];
      _err.message = transformText(lastElement);
      return _err;
    })
    return res.status(400).send(error);
  }
  return Promise.reject(error);
};

module.exports = error;
